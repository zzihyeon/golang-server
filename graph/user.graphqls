
enum gender {
  MALE
  FEMALE
}

type User {
  uid: Int!
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
  created_at: Time!
  updated_at: Time!
}

input userInput {
  uid: Int64!
}

input createUserInput {
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
}

input updateUserInput {
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
}

input deleteUserInput {
  uid: Int64!
}

type AdminUser implements UserInterface {
  uid: Int!
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
  created_at: Time!
  updated_at: Time!
  level: Int! # 0: super, 1: edit, 3: view
}

type BizInfo {
  biz_num: String!
  biz_img: String!
}

type Stuff {
  id: String!
  name: String!
  available: Int!
  total: Int!
}

type SellerUser implements UserInterface {
  uid: Int!
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
  created_at: Time!
  updated_at: Time!
  bizInfo: [BizInfo!]!
  stuff: [Stuff!]!
}

type BuyerUser implements UserInterface {
  uid: Int!
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
  created_at: Time!
  updated_at: Time!
  purchases:[Stuff!]!
  shopping_carts:[Stuff!]!
}

interface UserInterface {
  uid: Int!
  email: String!
  name: String!
  phone: String!
  gender: gender!
  birth_date: Time!
  created_at: Time!
  updated_at: Time!
}